[build-system]
requires = ["setuptools>=59"]
build-backend = "setuptools.build_meta"

[project]
name = "behave-html-pretty-formatter"
version = "1.11.2"
description = "Pretty HTML Formatter for Behave"
readme = "README.md"
license = {file = "LICENSE"}
authors = [
  {name = "Michal Odehnal", email = "modehnal@redhat.com"},
  {name = "Filip Pokryvka", email = "fpokryvk@redhat.com"},
  {name = "Peter Bittner", email = "django@bittner.it"},
  {name = "Luca Macavero", email = "luca.macavero@dorbit.space"},
]
maintainers = [
  {name = "Michal Odehnal", email = "modehnal@redhat.com"},
  {name = "Filip Pokryvka", email = "fpokryvk@redhat.com"},
]
classifiers = [
  "Development Status :: 5 - Production/Stable ",
  "Framework :: Django",
  "Intended Audience :: Information Technology",
  "License :: OSI Approved :: GNU General Public License v3 (GPLv3)",
  "Operating System :: OS Independent",
  "Programming Language :: Python :: 3",
  "Programming Language :: Python :: 3.6",
  "Programming Language :: Python :: 3.7",
  "Programming Language :: Python :: 3.8",
  "Programming Language :: Python :: 3.9",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: Implementation :: CPython",
  "Programming Language :: Python :: Implementation :: PyPy",
  "Topic :: Software Development :: Testing",
  "Topic :: Software Development :: Testing :: BDD",
]
keywords = [
  "behave",
  "formatter",
]
requires-python = ">=3.6"
dependencies = [
  "behave",
  "dominate==2.9.0",
  "markdown",
]

[project.urls]
homepage = "https://github.com/behave-contrib/behave-html-pretty-formatter"

[tool.behave]
junit = true
junit_directory = "tests"
paths = ["tests/acceptance"]
show_skipped = false
summary = false

# Define ALIAS for PrettyHTMLFormatter.

[tool.behave.formatters]
html-pretty = "behave_html_pretty_formatter:PrettyHTMLFormatter"

# Optional configuration of PrettyHTMLFormmater
# also possible to use "behave ... -D behave.formatter.html-pretty.{setting}={value}".

[tool.behave.userdata]
behave.formatter.html-pretty.title_string = "Test Suite Reporter"
# Example usecase, print {before/after}_scenarios as steps with attached data.
behave.formatter.html-pretty.pseudo_steps = false
# Structure of the result html page readable(pretty) or condensed.
behave.formatter.html-pretty.pretty_output = true
# The '%' must be escaped in ini format.
behave.formatter.html-pretty.date_format = "%%d-%%m-%%Y %%H:%%M:%%S"
# Defines if the summary is expanded upon start.
behave.formatter.html-pretty.show_summary = false
# Define what to collapse by default, possible values:
#  "auto" - show everything except embeds (default)
#  "all" - hide everything
#  comma separated list - specify subset of "scenario,embed,table,text"
#  "none" - show everything, even embeds
behave.formatter.html-pretty.collapse = "auto"
# Defines if the user is interested in what steps are not executed.
behave.formatter.html-pretty.show_unexecuted_steps = true
# Defines if the user wants to see previous attempts when using auto retry.
# Auto retry https://github.com/behave/behave/blob/main/behave/contrib/scenario_autoretry.py
behave.formatter.html-pretty.show_retry_attempts = true
# Override global summary visibility
#  "auto" - show global summary if more than one feature executed (default)
#  "true" - show global summary
#  "false" - hide global summary
behave.formatter.html-pretty.global_summary = "auto"
# Following will be formatted in summary section as "tester: worker1".
behave.additional-info.tester = "super_worker"
# Can be used multiple times.
behave.additional-info.location = "super_awesome_lab"

[tool.black]
color = false
extend-exclude = "behave4cmd0"

[tool.ruff]
extend-exclude = ["tests/acceptance/steps/behave4cmd0"]
extend-select = ["B", "BLE", "C4", "C90", "COM", "DJ", "DTZ", "EM", "G", "I", "N", "PIE", "PL", "PT", "PTH", "R", "S", "SIM", "T10", "TID", "W", "YTT"]
extend-ignore = []

[tool.ruff.per-file-ignores]
"behave_html_pretty_formatter/__init__.py" = ["F401"]
"behave_html_pretty_formatter/html_pretty.py" = ["DTZ005", "PLR0913", "SIM102", "SIM117"]
"tests/**/*.py" = ["S101"]
"tests/acceptance/steps/*.py" = ["F821"]

[tool.setuptools.packages.find]
namespaces = false
